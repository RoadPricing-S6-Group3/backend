apiVersion: v1
kind: ConfigMap
metadata:
  name: my-configmap
data:
  # The Deployment name
  DEP_NAME: vehicle-service-deployment
  # The Google cloud project id
  PROJECT_ID: graphic-matrix-308512
  # For convenience, I've named the image the same as the service name
  IMAGE_NAME: vehicle-service
  # The tag for the image. I'm using latest for now
  IMAGE_TAG: latest
  CLOUDSDK_CONTAINER_CLUSTER: autopilot-cluster-1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $(DEP_NAME)
  labels:
    app: $(DEP_NAME)
spec:
  replicas: 0
  selector:
    matchLabels:
      app: $(DEP_NAME)
  template:
    metadata:
      labels:
        app: $(DEP_NAME)
    spec:
      containers:
        - name: $(CLOUDSDK_CONTAINER_CLUSTER)
          image: gcr.io/$(PROJECT_ID)/$(IMAGE_NAME):$(IMAGE_TAG)
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: my-configmap
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: $(IMAGE_NAME)-network
  namespace: "default"
spec:
  selector:
    app: $(IMAGE_NAME)
  ports:
    # The port that this service listens to for incoming traffic.
    - port: 8080
      # The port that this service sends requests to.
      targetPort: 8080
  #  LoadBalancer to expose the service externally,
  #  NodePort to expose the service on a port across each of your nodes,
  #  and ClusterIP to expose the service on a cluster-internal IP
  type: ClusterIP
  envFrom:
    - configMapRef:
      name: my-configmap