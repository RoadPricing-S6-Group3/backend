version: '3.8'
services:
  vehicle-service:
    container_name: vehicle-service
    build:
      context: vehicle-service/
      dockerfile: Dockerfile
    networks:
      - spring-net
    restart: on-failure
    depends_on:
      vehicle-mysql:
        condition: service_started
    image: vehicle-service:latest
    ports:
      - 8080:8080

  user-service:
    container_name: user-service
    build:
      context: user-service/
      dockerfile: Dockerfile
    networks:
      - spring-net
    restart: on-failure
    depends_on:
      user-mysql:
        condition: service_started

    image: user-service:latest
    ports:
      - 8084:8084

  invoice-service:
    container_name: invoice-service
    build:
      context: invoice-service/
      dockerfile: Dockerfile
    networks:
      - spring-net
    restart: on-failure
    depends_on:
      invoice-mysql:
        condition: service_started
    image: invoice-service:latest
    ports:
      - 8083:8083

  traveldata-service:
    container_name: traveldata-service
    build:
      context: traveldata-service/
      dockerfile: Dockerfile
    networks:
      - spring-net
    restart: on-failure
    depends_on:
      traveldata-mysql:
        condition: service_started
    image: traveldata-service:latest
    ports:
      - 8085:8085

  pricing-service:
    container_name: pricing-service
    build:
      context: pricing-service/
      dockerfile: Dockerfile
    networks:
      - spring-net
    restart: on-failure
#    depends_on:
#      pricing-mysql:
#        condition: service_started
    image: pricing-service:latest
    ports:
      - 8086:8086

  rabbit-MQ:
    container_name: rabbit-MQ
    image: rabbitmq:3-management
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - spring-net
    restart: "no"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

  vehicle-mysql:
    container_name: vehicle-DB
    image: mysql:latest
    ports:
      - 3306:3306
    networks:
      - spring-net
    environment:
      - MYSQL_ROOT_PASSWORD=Teun
      - MYSQL_DATABASE=vehicle
    volumes:
      - vehicledata:/var/lib/mysql
      - vehicledata:/etc/mysql/conf.d

  user-mysql:
    container_name: user-DB
    image: mysql:latest
    ports:
      - 3307:3307
    networks:
      - spring-net
    environment:
      - MYSQL_ROOT_PASSWORD=Teun
      - MYSQL_DATABASE=user
      - MYSQL_TCP_PORT=3307
    volumes:
      - userdata:/var/lib/mysql
      - userdata:/etc/mysql/conf.d

  traveldata-mysql:
    container_name: traveldata-DB
    image: mysql:latest
    ports:
      - 3308:3308
    networks:
      - spring-net
    environment:
      - MYSQL_ROOT_PASSWORD=Teun
      - MYSQL_DATABASE=traveldata
      - MYSQL_TCP_PORT=3308
    volumes:
      - traveldatadata:/var/lib/mysql
      - traveldatadata:/etc/mysql/conf.d

  invoice-mysql:
    container_name: invoice-DB
    image: mysql:latest
    ports:
      - 3309:3309
    networks:
      - spring-net
    environment:
      - MYSQL_ROOT_PASSWORD=Teun
      - MYSQL_DATABASE=invoice
      - MYSQL_TCP_PORT=3309
    volumes:
      - invoicedata:/var/lib/mysql
      - invoicedata:/etc/mysql/conf.d

#  pricing-mysql:
#    container_name: pricing-DB
#    image: mysql:latest
#    ports:
#      - 3310:3310
#    networks:
#      - spring-net
#    environment:
#      - MYSQL_ROOT_PASSWORD=Teun
#      - MYSQL_DATABASE=pricing
#      - MYSQL_TCP_PORT=3310
#    volumes:
#      - pricingdata:/var/lib/mysql
#      - pricingdata:/etc/mysql/conf.d

  mongodb:
    container_name: mongodb
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: Root
    ports:
      - "27017:27017"
    networks:
      - spring-net

networks:
  spring-net:
    name: spring-net
    driver: bridge

volumes:
  vehicledata:
  userdata:
  invoicedata:
  traveldatadata:
#  pricingdata:
